<?phpfunction __autoload($class_name) {require_once "../../classes/".$class_name.".php"; }//автоподключение нужного класса$orderswitcher = new OrderSwitchers();//создание объекта класса ClassOrderSwitchersforeach($_GET as $var=>$var_value)$orderswitcher->write($var, $var_value);//запись в БД свойств переключателя, введенных на предыдущей странице?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head>  <title>Конструктор переключателя</title><meta http-equiv="Content-type" content="text/html; charset=utf8"/><meta name="Keywords" content="Конструктор переключателя, конфигуратор переключателя" /><meta name="Description" content="On-line разработка переключателя по техническим требованиям заказчика" /><meta name="Author" content="Дмитрий Коржов" /><link href="../../images/icon1.ico" rel="shortcut icon" type="image/x-icon" /><link  rel="stylesheet" type="text/css" href="../../styles/styles.css" /><script type="text/javascript" src="../../lib/wz_jsgraphics.js"></script><script type="text/javascript" src="../../lib/jquery-1.5.1.js"></script></head>  <body onLoad = 'refresh()'>  <?php require_once "../../blocks/header.html";?> <div id = "content" >  <?php require_once "../../blocks/left_panel.html";?>   <div id = "main_content"> <?php if($_COOKIE["construct_mode"] == "edit"): ?><h1>Редактор переключателя</h1><?php else: ?><h1>Конструктор переключателя</h1><?php endif; ?>	<h2>Шаг 7  Схема переключателя</h2>	<center><h3>Введите диаграмму замыканий, перемычки <script type='text/javascript'>if(getCookie("switcher_inf_board") != 0 ) document.write("и маркировку положений ручки");  function getCookie(name) {    var r = document.cookie.match("(^|;) ?" + name + "=([^;]*)(;|$)");    if (r) return r[2];    else return "";  }</script></h3><p>Для ввода замыкающих положений кликните мышкой в тех ячейках на пересечении контактных групп и положений ручки, в которых эти группы должны быть замкнуты. Крест в ячейке означает - контакт замкнут, пустая ячейка - контакт разомкнут. Для удаления ошибочно введенного замкнутого положения кликните в этой ячейке еще раз.</p><p>Для ввода перемычек кликните мышкой на обозначениях контактов, которые должна соединять перемычка.Внутренние перемычки отображаются синим цветом. Внешние перемычки - красным.Для удаления ошибочно введенной перемычки кликните на контактах, которые соединяет перемычка, еще раз.</p><script type='text/javascript'>if(getCookie("switcher_inf_board") != 0 ) document.write("<p>Если Вы хотите изменить стандартную маркировку положений ручки, введите текст маркировки в соответствующие поля формы.</p></br>");  function getCookie(name) {    var r = document.cookie.match("(^|;) ?" + name + "=([^;]*)(;|$)");    if (r) return r[2];    else return "";  }</script><script type='text/javascript'>document.write("<form name = 'form7' action='#' >");document.write("<input type = 'button'  onClick = 'input()' name = 'start' value = 'Ввод'/>");document.write("</form></br>");	 qp = Number(getCookie("switcher_qpos"));//чтение количества положений qc = Number(getCookie("switcher_qcont"));//чтение количества контактов cellSize = 40;//размер ячейки таблицы //alert(document.cookie);//Обнуление диаграммы замыканий cD = new Array(); for (i=0; i<qp; i++)  cD[i]= new Array(qc);//массив диаграммы замыканий  strCD="";//строка диаграммы замыканий for (var j=0; j<qc; j++)   for (var i=0; i<qp; i++){    cD[i][j] = 'o';	strCD+=cD[i][j];	}	//alert(strCD);var mark = new Array();//массив маркировок	//Создание массива номеров контактов перемычекvar jump = new Array(2);  jump[0]= new Array();	  jump[1]= new Array(); qJump = 0;//количество перемычекvar selectContact = false;//состояние выбора контакта  //Вывод таблицы//----------------------------------------------------------------------------------------------------------	document.write("</br><table class ='indiag'  border=1 cellspacing=0 cellpadding=0  height=auto>");document.write("<tr><th colspan='"+(qp+3)+"' style='background: #9df;' >Маркировка</th></tr>");document.write("<tr><th  rowspan='2' style='background: #9df;'><div>номеров контактов</div>");document.write("<div id='Canvas' style='margin-left: 50%; margin-bottom: 0; height:0px; background: #f00;'></div></th>");document.write("<th colspan="+i+" style='background: #9df;'>положений</th></tr><tr style='background: #9df;'>");	if(getCookie("switcher_inf_board") != "0" ){//если есть табличка или ручка u  - вывод форм ввода маркировок		document.write("<form name = 'mark' action = '#'  method = 'get'>");			for(var i=0;i<qp;i++)				document.write("<th><input type = 'text' name = 'number"+i+"' value='"+(i+1)+"' size='"+(cellSize/12)+"'/></th>");			document.write("</form></tr>");		}	else//если нет таблички - вывод нумерации положений		for(var i=0;i<qp;i++)			document.write("<th>"+(i+1)+"</th>");			document.write("</tr>");for(var j=0;j<qc;j++) {document.write("<tr style='background: #fff; font-size: 0;'><th style='width:200px;'>");document.write("<a href='javascript:inputJump("+(2*j+1)+")'>");document.write("<img style='float:left;margin-left: 0px' src='contact_left1.gif' height='"+cellSize+"px' name='contact"+(2*j+1)+"'/></a>");document.write("<a href='javascript:inputJump("+(2*j+2)+")'>");document.write("<img style='float: left;margin-right:-1000px;' src='contact_right1.gif' height='"+cellSize+"px' name='contact"+(2*j+2)+"'/></a>");document.write("</th>"); for(var i=0;i<qp;i++) {   document.write("<td><a href='javascript:clicked("+i+","+j+")'>");  document.write("<img src='icprobel.gif' width="+cellSize+" height="+cellSize +" name='space"+10*i+""+j+"' border=0></a></td>"); } document.write("</tr>");}document.write("</table><br>");//Вывод нумерации контактов//Установка для каждого браузера масштабного коэффициента if(navigator.appName == "Opera")  coef = 0.538;else if(navigator.appName == "Microsoft Internet Explorer")  coef = 0.5248;else  coef = 0.526; y0 = 10;//ветрикальный ноль ячеек таблицыjsGraphics (); //включение графической библиотеки jg = new jsGraphics("Canvas");//создание объекта "Холст" для <div id='Canvas'> jg.setFont("Arial", 0.5*cellSize+"px", Font.PLAIN);//шрифт, размер, стильfor(var nCG = 0; nCG < qc; nCG++){//nCG - номер контактной группы	jg.drawStringRect(nCG*2+1, -2.45*cellSize, y0+0.7*coef*cellSize+2*coef*nCG*cellSize, 0.6*cellSize, "left");	jg.drawStringRect(nCG*2+2, 1.9*cellSize, y0+0.7*coef*cellSize+2*coef*nCG*cellSize, 0.6*cellSize, "right"); }jg.paint();//вывод графики на холст//-------------------------------------------------------------------------------------------------------------//Ввод креста в ячейку    function clicked(i,j) {   if (cD[i][j] == 'o'){     cD[i][j] = 'x'; document.images["space"+10*i+""+j].src = "ickrest.gif";}   else{   cD[i][j] = 'o'; document.images["space"+10*i+""+j].src = "icprobel.gif";} }function refresh(){//при перезагрузке страницы вывод обновленной схемы(после удаления перемычки)outJump();//вывод перемычекcDStr = getCookie("switcher_cdiag");//чтение из Cookie диаграммы замыканий//qp = Number(getCookie("switcher_qpos"));//чтение количества положений//qc = Number(getCookie("switcher_qcont"));//чтение количества контактов//alert(cDStr);//Вывод диаграммы замыканийindex = 0;	for (var numC=0; numC<qc; numC++)		for (var numP=0; numP<qp; numP++){				cD[numP][numC] = cDStr.charAt(index);			index++;			if(cD[numP][numC] == "x") document.images["space"+numP+""+numC].src = "ickrest.gif";			else document.images["space"+numP+""+numC].src = "icprobel.gif";		}//Вывод маркировки положенийvar mark = getCookie("switcher_mark");//чтение из Cookie маркировки положенийvar arrMark = new Array();//массив маркировок положенийindex = 0;	for(var m=0; m<qp; m++){		arrMark[m] = "";		while (mark.charAt(index) != "$") {			arrMark[m] += mark.charAt(index);			index++;			}			index++;	}		document.mark.number0.value = arrMark[0];		document.mark.number1.value = arrMark[1];	if(qp > 2) document.mark.number2.value = arrMark[2];	if(qp > 3) document.mark.number3.value = arrMark[3];	if(qp > 4) document.mark.number4.value = arrMark[4];	if(qp > 5) document.mark.number5.value = arrMark[5];	if(qp > 6) document.mark.number6.value = arrMark[6];	if(qp > 7) document.mark.number7.value = arrMark[7];	if(qp > 8) document.mark.number8.value = arrMark[8];	if(qp > 9) document.mark.number9.value = arrMark[9];	if(qp > 10) document.mark.number10.value = arrMark[10];	if(qp > 11) document.mark.number11.value = arrMark[11];	} //------------------------------------------------------------------------------------------------------------------ //Обработка клика на контакте для ввода перемычкиfunction inputJump(nC){//nC - номер контактаif(selectContact == false){//если контакт не отмечен - запись первого контакта перемычки в массив перемычек if(nC%2 == 1) document.images["contact"+nC].src = "contact_left1_red.gif";//отметка выбранного левого контакта красным цветом else document.images["contact"+nC].src = "contact_right1_red.gif";//отметка выбранного правого контакта красным цветом selectContact = true;//установка флага отметки контакта  jump[0][qJump] = nC;//запись номера первого контакта перемычки	}	else{//если контакт отмечен - запись второго контакта перемычки в массив перемычек либо удаление повторной перемычки if(jump[0][qJump]%2 == 1) document.images["contact"+jump[0][qJump]].src = "contact_left1.gif";//удаление отметки выбранного левого контакта красным цветом else document.images["contact"+jump[0][qJump]].src = "contact_right1.gif";//удаление отметки выбранного правого контакта красным цветомselectContact = false;//сброс флага отметки контакта//Если номер первого контакта больше номера второго - поменять местамиif(jump[0][qJump] > nC){var temp=jump[0][qJump];jump[0][qJump] = nC; nC = temp;}//Проверка наличия отмеченной для удаления перемычкиvar numberPresJump = -1;//номер совпавшей существующей перемычки	for(var i=0; i<qJump; i++)		if((jump[0][i] == jump[0][qJump]) && (jump[1][i] == nC)) 			numberPresJump = i;//запись номера совпавшей перемычки//Удаление повторно введенной перемычки			if(numberPresJump != -1){//удаление повторно введенной перемычки		qJump--;//декремент количества перемычек		//alert("удаление "+numberPresJump);var cDStr = ""; for (var nCont=0; nCont<qc; nCont++)   for (var nPos=0; nPos<qp; nPos++){    cDStr += cD[nPos][nCont];	}setCookie("switcher_cdiag", cDStr);//запись диаграммы замыканий в cookie//запись маркировки положений в cookievar mark = document.mark.number0.value + "$" + document.mark.number1.value + "$";	if(qp > 2) mark += document.mark.number2.value + "$";	if(qp > 3) mark += document.mark.number3.value + "$";	if(qp > 4) mark += document.mark.number4.value + "$";	if(qp > 5) mark += document.mark.number5.value + "$";	if(qp > 6) mark += document.mark.number6.value + "$";	if(qp > 7) mark += document.mark.number7.value + "$";	if(qp > 8) mark += document.mark.number8.value + "$";	if(qp > 9) mark += document.mark.number9.value + "$";	if(qp > 10) mark += document.mark.number10.value + "$";	if(qp > 11) mark += document.mark.number11.value + "$";setCookie("switcher_mark", mark);//запись маркировки положений в cookie//alert(getCookie("switcher_cdiag")); // Выводим cookie			//outJump();//вывод перемычек		for(var i=numberPresJump; i<qJump; i++){//сдвиг последующих на место удаленной			jump[0][i] = jump[0][i+1];			jump[1][i] = jump[1][i+1];			}//Запись перемычек в cookievar jumpStr = "";	for (var k=0; k<qJump; k++){		jumpStr += jump[0][k]+" "; 		jumpStr += jump[1][k]+" "; 	}	jumpStr += "#";setCookie("switcher_jump", jumpStr);//запись перемычек в cookiesetCookie("switcher_qJump", qJump);//запись количества перемычек в cookiedocument.location = "constr_switcher7.php"//перезагрузка текущей страницы для обновления перемычек без удаленных//outJump();//вывод перемычек					}		else{jump[1][qJump] = nC;//запись номера второго контакта перемычки if(jump[0][qJump] != jump[1][qJump]) {//если отмеченные номера не равны	if(jump[0][qJump] > jump[1][qJump]){//если первый номер больше второго - поменять местами	var temp = jump[0][qJump];jump[0][qJump] = jump[1][qJump];jump[1][qJump] = temp;}	//Проверка корректности ввода перемычекif(jump[1][qJump]-jump[0][qJump]==1 && jump[1][qJump]%2==0) 	alert("Введенная Вами перемычка перемыкает \nконтактную группу  "+jump[0][qJump]+" - "+jump[1][qJump]);	else{//Проверка количества перемычек, подключенных к одному контактуvar n1 = jump[0][qJump];//номер первого контакта пермычкиvar n2 = jump[1][qJump];//номер второго контакта пермычкиvar q1 = 0;//количество внених перемычек, подключенных к первому контакту перемычкиvar q2 = 0;//количество внених перемычек, подключенных ко второму контакту перемычки	for(var nJ = 0; nJ < qJump; nJ++){		if((jump[0][nJ]==n1 || jump[1][nJ]==n1) && checkInterJump(nJ)==false && checkInterJump(qJump)==false) q1++;		if((jump[0][nJ]==n2 || jump[1][nJ]==n2) && checkInterJump(nJ)==false && checkInterJump(qJump)==false) q2++;	}	if (q1 > 1) alert ("К контакту "+n1+" уже подключено две внешние перемычки");	else if (q2 > 1) alert ("К контакту "+n2+" уже подключено две внешние перемычки");	else{qJump++;// инкремент количества перемычек//Сортировка перемычек по возрастанию номеров контактов for (var p=0; p<qJump; p++){//p - номер перемычки  //Определение перемычкм с минимальными номерами контактов var nmin = 0;//номер минимального элемента var n1min = 48; var n2min = 48; for (var k=p; k<qJump; k++){//k - текуший номер перемычки   if (parseInt(jump[0][k]) < n1min || (parseInt(jump[0][k]) == n1min && parseInt(jump[1][k]) < n2min)){     n1min = jump[0][k];  n2min = jump[1][k]; nmin = k;     }   } //Обмен первого и минимального элемента var tmp = jump[0][p]; jump[0][p] = jump[0][nmin]; jump[0][nmin] = tmp; var tmp = jump[1][p]; jump[1][p] = jump[1][nmin]; jump[1][nmin] = tmp;     }//Запись перемычек в cookievar jumpStr = "";	for (var k=0; k<qJump; k++){		jumpStr += jump[0][k]+" "; 		jumpStr += jump[1][k]+" "; 		}		jumpStr += "$";//запись фиктивного $ что бы в cookie не был удален последний пробелsetCookie("switcher_jump", jumpStr);//запись перемычек в cookiesetCookie("switcher_qJump", qJump);//запись количества перемычек в cookie      }     }    }   }outJump();//вывод перемычек }}//Проверка, является ли перемычка внутренней function checkInterJump(n){//n - номер перемычки if((jump[1][n]-jump[0][n]==2)&&(((jump[0][n]-1)%4==0)||((jump[0][n]-2)%4==0))) return true; return false; }  //----------------------------------------//Вывод перемычекfunction outJump(){ maxNTrace=0;//максимальный номер вертикальной трассы перемычки	 jumpLeft = new Array();//массив трасс левых перемычек jumpRight = new Array();//массив трасс правых перемычек 	for (i=0; i<24; i++){	  jumpLeft[i]= new Array(12);	  jumpRight[i]= new Array(12); }//Обнуление массивов трасс перемычек	for (nContGr = 0; nContGr < qc; nContGr++) //$nContGr - номер контактной группы		for (nTrace = 0; nTrace < qc/2; nTrace++){ //nTrace - номер трассы перемычки			jumpLeft[nTrace][nContGr] = 0;			jumpRight[nTrace][nContGr] = 0;		}	//document.write(jumpLeft);//Преобразование перемычек из строки в массивjumpStr = getCookie("switcher_jump");//чтение перемычек из cookieqJump = Number(getCookie("switcher_qJump"));//чтение количества перемычек из cookie//alert(jumpStr);	index = 0;	for (var nJ=0; nJ<qJump; nJ++){		jump[0][nJ] = jumpStr.charAt(index);//запись первой цифры первого номера контакта перемычки		index++;		if(jumpStr.charAt(index) != " "){		jump[0][nJ] += jumpStr.charAt(index);//запись второй цифры первого номера контакта перемычки		index++;		}		index++;		jump[1][nJ] = jumpStr.charAt(index);//запись первой цифры второго номера контакта перемычки		index++;		if(jumpStr.charAt(index) != " "){		jump[1][nJ] += jumpStr.charAt(index);//запись второй цифры второго номера контакта перемычки		index++;		}		index++;} jg.setColor("#f00");//цвет jg.setStroke(cellSize/10);//толщина линии //jg.drawLine (-20, 43, -20, 73); //jg.drawLine (20, 43, 20, 113);  //jg.paint();//вывод графики на холстfor (var nJ=0; nJ<qJump; nJ++){//nJ - номер перемычки	if((jump[1][nJ]-jump[0][nJ]==2)&&(jump[0][nJ]%2==1)&&((jump[1][nJ]-1)%4==0)) {inOutLeftJump(jump[0][nJ]); continue;}//вывод левой внутренне-внешней перемычки	if((jump[1][nJ]-jump[0][nJ]==2)&&(jump[0][nJ]%2==1)) {inLeftJump(jump[0][nJ]); continue;}//вывод левой внутренней перемычки	if((jump[1][nJ]-jump[0][nJ]==2)&&(jump[0][nJ]%2==0)&&((jump[1][nJ]-2)%4==0)) {inOutRightJump(jump[0][nJ]); continue;}//вывод правой внутренне-внешней перемычки	if((jump[1][nJ]-jump[0][nJ]==2)&&(jump[0][nJ]%2==0)) {inRightJump(jump[0][nJ]); continue;}//вывод правой внутренней перемычки	if((jump[0][nJ]%2==1)&&(jump[1][nJ]%2==1)) {outLeftJump(jump[0][nJ], jump[1][nJ]); continue;}//вывод левой внешней перемычки	if((jump[0][nJ]%2==0)&&(jump[1][nJ]%2==0)) {outRightJump(jump[0][nJ], jump[1][nJ]); continue;}//вывод правой внешней перемычки	if((jump[0][nJ]%2==1)&&(jump[1][nJ]%2==0)) {outLeftRightJump(jump[0][nJ], jump[1][nJ]); continue;}//вывод лево-правой внешней перемычки	if((jump[0][nJ]%2==0)&&(jump[1][nJ]%2==1)) {outRightLeftJump(jump[0][nJ], jump[1][nJ]); continue;}//вывод право-левой внешней перемычки	}jg.paint();//вывод графики на холст	}	//--------------------------------------------------------------------------------------------------------------------	//Вывод левой внутренней перемычки	function inLeftJump(n1){// n1 - номер первого контакта перемычкиjg.setColor("#00f");//цвет jg.drawLine (-0.68*cellSize, y0+1.57*coef*cellSize+coef*(n1-1)*cellSize, -0.68*cellSize, y0+2.8*coef*cellSize +coef*(n1-1)*cellSize);}//--------------------------------------------------------------------------------------------------------------------	//Вывод левой внутренне-внешней перемычки	function inOutLeftJump(n1){// n1 - номер первого контакта перемычкиjg.setColor("#f00");//цвет jg.drawLine (-0.68*cellSize, y0+1.57*coef*cellSize+coef*(n1-1)*cellSize, -0.68*cellSize, y0+2.8*coef*cellSize +coef*(n1-1)*cellSize);}//---------------------------------------------------------------------------------------------------------------------//Вывод правой внутренней перемычки	function inRightJump(n1){// n1 - номер первого контакта перемычкиjg.setColor("#00f");//цветjg.drawLine (0.28*cellSize, y0+1.57*coef*cellSize+coef*(n1-2)*cellSize, 0.28*cellSize, y0+2.8*coef*cellSize +coef*(n1-2)*cellSize);}//---------------------------------------------------------------------------------------------------------------------//Вывод правой внутренне-внешней перемычки	function inOutRightJump(n1){// n1 - номер первого контакта перемычкиjg.setColor("#f00");//цветjg.drawLine (0.28*cellSize, y0+1.57*coef*cellSize+coef*(n1-2)*cellSize, 0.28*cellSize, y0+2.8*coef*cellSize +coef*(n1-2)*cellSize);}//---------------------------------------------------------------------------------------------------------------------//Вывод левой внешней перемычкиfunction outLeftJump(n1, n2){//n1, n2 - номера контактов перемычкиjg.setColor("#f00");//цвет//определение ближайщей доступной трассы	for(nextTraceLeft=0; nextTraceLeft < qc/2; nextTraceLeft++){//nextTraceLeft - номер трассы левой перемычки		var flagAvailable = 1;		for(nContGr=(n1-1)/2; nContGr<(n2-1)/2; nContGr++){//nContGr - номер контактной группы			if(jumpLeft[nextTraceLeft][nContGr] != 0) flagAvailable = 0;		}		if(flagAvailable == 1) break;	}	nTraceLeft=nextTraceLeft+1;//номер левой вертикальной трассы;	if (nextTraceLeft > maxNTrace) maxNTrace = nextTraceLeft;//определение максимального номера вертикальной трассы//Вывод верхней горизонтальной линии перемычки	jg.drawLine( -0.85*cellSize, y0+1.12*coef*cellSize+((n1-1))*coef*cellSize, -0.85*cellSize-0.25*nTraceLeft*cellSize, y0+1.12*coef*cellSize+((n1-1))*coef*cellSize);//Вывод нижней горизонтальной линии перемычки	jg.drawLine(-0.85*cellSize , y0+1.12*coef*cellSize+((n2-1))*coef*cellSize, -0.85*cellSize-0.25*nTraceLeft*cellSize, y0+1.12*coef*cellSize+((n2-1))*coef*cellSize);//Вывод вертикальной линии перемычки	jg.drawLine(-0.85*cellSize-0.25*nTraceLeft*cellSize, y0+1.12*coef*cellSize+((n1-1))*coef*cellSize,-0.85*cellSize-0.25*nTraceLeft*cellSize, y0+1.12*coef*cellSize+((n2-1))*coef*cellSize);	//Запись маркеров занятости трассы			for(nContGr=(n1-1)/2; nContGr<(n2-1)/2; nContGr++)//nContGr - номер контактной группы			jumpLeft[nextTraceLeft][nContGr] = 1; }//---------------------------------------------------------------------------------------------------------------------//Вывод правой внешней перемычки	function outRightJump(n1, n2){//n1, n2 - номера контактов перемычкиjg.setColor("#f00");//цвет//определение ближайщей доступной трассы	for(nextTraceRight=0; nextTraceRight < qc/2; nextTraceRight++){//nextTraceRight - номер трассы правой перемычки		var flagAvailable = 1;		for(nContGr=(n1-2)/2; nContGr<(n2-2)/2; nContGr++){//nContGr - номер контактной группы			if(jumpRight[nextTraceRight][nContGr] != 0) flagAvailable = 0;		}		if(flagAvailable == 1) break;	}	nTraceRight=nextTraceRight+1;//номер правой вертикальной трассы;	if (nextTraceRight > maxNTrace) maxNTrace = nextTraceRight;//определение максимального номера вертикальной трассы//Вывод верхней горизонтальной линии перемычки	jg.drawLine( 0.48*cellSize, y0+1.12*coef*cellSize+((n1-2))*coef*cellSize, 0.48*cellSize+0.25*nTraceRight*cellSize, y0+1.12*coef*cellSize+((n1-2))*coef*cellSize);//Вывод нижней горизонтальной линии перемычки	jg.drawLine(0.48*cellSize , y0+1.12*coef*cellSize+((n2-2))*coef*cellSize, 0.48*cellSize+0.25*nTraceRight*cellSize, y0+1.12*coef*cellSize+((n2-2))*coef*cellSize);//Вывод вертикальной линии перемычки	jg.drawLine(0.48*cellSize+0.25*nTraceRight*cellSize, y0+1.12*coef*cellSize+((n1-2))*coef*cellSize, 0.48*cellSize+0.25*nTraceRight*cellSize, y0+1.12*coef*cellSize+((n2-2))*coef*cellSize);	//Запись маркеров занятости трассы			for(nContGr=(n1-2)/2; nContGr<(n2-2)/2; nContGr++)//nContGr - номер контактной группы			jumpRight[nextTraceRight][nContGr] = 1; }//---------------------------------------------------------------------------------------------------------------------//Вывод лево-правой внешней перемычкиfunction outLeftRightJump(n1, n2){//n1, n2 - номера контактов перемычкиjg.setColor("#f00");//цвет//определение ближайщей доступной трассы	for(nextTraceRight=0; nextTraceRight < qc/2; nextTraceRight++){//nextTraceRight - номер трассы правой перемычки		var flagAvailable = 1;		for(nContGr=(n1-1)/2; nContGr<(n2-2)/2+1; nContGr++){//nContGr - номер контактной группы			if(jumpRight[nextTraceRight][nContGr] != 0) flagAvailable = 0;		}		if(flagAvailable == 1) break;	}	nTraceRight=nextTraceRight+1;//номер правой вертикальной трассы;	if (nextTraceRight > maxNTrace) maxNTrace = nextTraceRight;//определение максимального номера вертикальной трассы//Вывод короткой вертикальной линииjg.drawLine (-0.68*cellSize, y0+1.57*coef*cellSize+coef*(n1-1)*cellSize, -0.68*cellSize, y0+1.75*coef*cellSize +coef*(n1-1)*cellSize);	//Вывод верхней горизонтальной линии перемычки	jg.drawLine( -0.68*cellSize, y0+1.75*coef*cellSize +coef*(n1-1)*cellSize, 0.48*cellSize+0.25*nTraceRight*cellSize, y0+1.75*coef*cellSize +coef*(n1-1)*cellSize);//Вывод нижней горизонтальной линии перемычки	jg.drawLine(0.48*cellSize , y0+1.12*coef*cellSize+((n2-2))*coef*cellSize, 0.48*cellSize+0.25*nTraceRight*cellSize, y0+1.12*coef*cellSize+((n2-2))*coef*cellSize);//Вывод длинной вертикальной линии перемычки	jg.drawLine(0.48*cellSize+0.25*nTraceRight*cellSize, y0+1.75*coef*cellSize +coef*(n1-1)*cellSize, 0.48*cellSize+0.25*nTraceRight*cellSize, y0+1.12*coef*cellSize+((n2-2))*coef*cellSize);	//Запись маркеров занятости трассы			for(nContGr=(n1-1)/2; nContGr<(n2-2)/2+1; nContGr++)//nContGr - номер контактной группы			jumpRight[nextTraceRight][nContGr] = 1;  }//---------------------------------------------------------------------------------------------------------------------//Вывод право-левой внешней перемычкиfunction outRightLeftJump(n1, n2){//n1, n2 - номера контактов перемычкиjg.setColor("#f00");//цвет//определение ближайщей доступной трассы	for(nextTraceRight=0; nextTraceRight < qc/2; nextTraceRight++){//nextTraceRight - номер трассы правой перемычки		var flagAvailable = 1;		for(nContGr=(n1-2)/2; nContGr<(n2-1)/2+1; nContGr++){//nContGr - номер контактной группы			if(jumpRight[nextTraceRight][nContGr] != 0) flagAvailable = 0;		}		if(flagAvailable == 1) break;	}	nTraceRight=nextTraceRight+1;//номер правой вертикальной трассы;	if (nextTraceRight > maxNTrace) maxNTrace = nextTraceRight;//определение максимального номера вертикальной трассы//Вывод короткой вертикальной линииjg.drawLine (-0.68*cellSize, y0+1.57*coef*cellSize+coef*(n2-1)*cellSize, -0.68*cellSize, y0+1.75*coef*cellSize +coef*(n2-1)*cellSize);	//Вывод нижней горизонтальной линии перемычки	jg.drawLine(-0.68*cellSize, y0+1.75*coef*cellSize +coef*(n2-1)*cellSize, 0.48*cellSize+0.25*nTraceRight*cellSize, y0+1.75*coef*cellSize +coef*(n2-1)*cellSize);//Вывод верхней горизонтальной линии перемычки	jg.drawLine(0.48*cellSize , y0+1.12*coef*cellSize+((n1-2))*coef*cellSize, 0.48*cellSize+0.25*nTraceRight*cellSize, y0+1.12*coef*cellSize+((n1-2))*coef*cellSize);//Вывод длинной вертикальной линии перемычки	jg.drawLine(0.48*cellSize+0.25*nTraceRight*cellSize, y0+1.12*coef*cellSize+((n1-2))*coef*cellSize, 0.48*cellSize+0.25*nTraceRight*cellSize, y0+1.75*coef*cellSize +coef*(n2-1)*cellSize);	//Запись маркеров занятости трассы			for(nContGr=(n1-2)/2; nContGr<(n2-1)/2+1; nContGr++)//nContGr - номер контактной группы			jumpRight[nextTraceRight][nContGr] = 1;  }//---------------------------------------------------------------------------------------------------------------------//Обработка нажатия кнопки "Ввод"function input() {//Проверка заполнения таблицы замыканийvar go = true;//установка флага разрешения перехода на следующую страницуfor (j=0; j<qc; j++){	var flag = false;//сброс флага заполения строк таблицы замыканий	for (i=0; i<qp; i++){		if(cD[i][j] != "o") flag = true;//установка флага заполения строки таблицы замыканий		}	if(!flag){	go = false;//сброс флага разрешения перехода на следующую страницу	alert("Вы не ввели замыкающие положения для контактной группы "+(j*2+1)+" - "+(j*2+2));	var cDStr = ""; for (var nCont=0; nCont<qc; nCont++)   for (var nPos=0; nPos<qp; nPos++){    cDStr += cD[nPos][nCont];	}setCookie("switcher_cdiag", cDStr);//запись диаграммы замыканий в cookie//запись маркировки положений в cookievar mark = document.mark.number0.value + "$" + document.mark.number1.value + "$";	if(qp > 2) mark += document.mark.number2.value + "$";	if(qp > 3) mark += document.mark.number3.value + "$";	if(qp > 4) mark += document.mark.number4.value + "$";	if(qp > 5) mark += document.mark.number5.value + "$";	if(qp > 6) mark += document.mark.number6.value + "$";	if(qp > 7) mark += document.mark.number7.value + "$";	if(qp > 8) mark += document.mark.number8.value + "$";	if(qp > 9) mark += document.mark.number9.value + "$";	if(qp > 10) mark += document.mark.number10.value + "$";	if(qp > 11) mark += document.mark.number11.value + "$";setCookie("switcher_mark", mark);//запись маркировки положений в cookie	document.location = "constr_switcher7.php";//на повторную загрузку страницы	}	else ;}if(go){//если таблица замыканий заполненаяif(getCookie("switcher_number_temp_scheme") == "") setCookie("switcher_number_temp_scheme", 1);//Преобразование XXX в X---Xfor (j=0; j<qc; j++)		for (i=0; i<qp; i++){				if((i==0) && (cD[i][j] =="x") && (cD[i+1][j] =="x")) {cD[i][j] = "u"; continue;}				if((i==qp-1) && (cD[i][j] =="x") && ((cD[i-1][j] =="u") || (cD[i-1][j] =="w"))) {cD[i][j] = "v";continue;}					if((i>0) && (i<qp-1)){				if((cD[i][j] =="x") && (cD[i+1][j] =="x")  && (cD[i-1][j] =="o")) {cD[i][j] = "u";continue;}				if((cD[i][j] =="x") && (cD[i+1][j] =="x")  && ((cD[i-1][j] =="u")|| (cD[i-1][j] =="w"))) {cD[i][j] = "w";continue;}				if((cD[i][j] =="x") && (cD[i+1][j] =="o")  && ((cD[i-1][j] =="u")|| (cD[i-1][j] =="w"))) cD[i][j] = "v";				}		}//Преобразование ДЗ из массива  в строку var cDStr = ""; for (var nCont=0; nCont < cD[0].length; nCont++)   for (var nPos=0; nPos < cD.length; nPos++){    cDStr += cD[nPos][nCont];	}//alert(pStr+'\n'+cStr+'\n'+cDStr+'\n'+qc+'\n'+qp);//alert(cD.length);	//alert(cD[0].length);	setCookie("switcher_cdiag", cDStr);//запись диаграммы замыканий в cookiesetCookie("switcher_qpos", qp);//запись количества положений в cookiesetCookie("switcher_qcont", qc);//запись количества контактов в cookie//alert(document.cookie);    //alert(getCookie("switcher_cdiag")); // Выводим cookie	//запись маркировки положений в cookieif(getCookie("switcher_inf_board") != "0"){//если есть табличка или ручка u var mark = document.mark.number0.value + "$" + document.mark.number1.value + "$";	if(qp > 2) mark += document.mark.number2.value + "$";	if(qp > 3) mark += document.mark.number3.value + "$";	if(qp > 4) mark += document.mark.number4.value + "$";	if(qp > 5) mark += document.mark.number5.value + "$";	if(qp > 6) mark += document.mark.number6.value + "$";	if(qp > 7) mark += document.mark.number7.value + "$";	if(qp > 8) mark += document.mark.number8.value + "$";	if(qp > 9) mark += document.mark.number9.value + "$";	if(qp > 10) mark += document.mark.number10.value + "$";	if(qp > 11) mark += document.mark.number11.value + "$";	}	else mark = "";	//alert(mark);	//Поиск введенной схемыget = "/pages/order_switcher/get_req_search_scheme.php?closdiag="+cDStr+"&qpos="+qp+"&qcont="+qc+"&jump="+jumpStr+"&qjump="+qJump+"&mark="+mark;document.location = get;/*$.get(  "/pages/order_switcher/get_req_search_scheme.php",  {    closDiag: cDStr,    qP: qp,	qC: qc,	jump: jumpStr,	mark: mark,	qJ:qJump  },  onAjaxSuccess);*/function onAjaxSuccess(number){// Здесь мы получаем данные, отправленные сервером   //alert(number);/*var temp_scheme = getCookie("switcher_number_temp_scheme");//номер временной схемы	if(number == "") {//если схема не найдена - запись номера временной схемы		number = "(схема"+temp_scheme+")";		temp_scheme++;		setCookie("switcher_number_temp_scheme", temp_scheme);//инкремент номера временной схемы		setCookie("switcher_number_scheme", number);//запись в  cookie номера схемы}else*/ setCookie("switcher_number_scheme", number);// запись в  cookie номера схемыurl = "constr_switcher8.php?";//передача GET - параметровurl += "closdiag="+cDStr;//диаграмма замыканийurl += "&mark="+mark;//маркировка положенийurl += "&qjump="+qJump;//количество перемычекurl += "&jump="+jumpStr;//номера контактов перемычекurl += "&nscheme="+number;//номер (имя) схемы//url += "&ntmpsch="+temp_scheme;//номер следущей временной схемы//alert(url);document.location =url;//переход на выбор самовозврата (шаг 8) 		}	}} function setCookie(name, value) {    document.cookie = name + "=" + value;  }  function getCookie(name) {    var r = document.cookie.match("(^|;) ?" + name + "=([^;]*)(;|$)");    if (r) return r[2];    else return "";  }//document.write(cDStr);	</script>	</center>	</div> </div>	 <div class="clear"></div> <?php require_once "../../blocks/footer.html";?> </body></html>